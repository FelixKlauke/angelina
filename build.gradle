plugins {
  id "org.sonarqube" version "2.8"
}

group 'de.felixklauke.angelina'
version '2.0.0-SNAPSHOT'

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'checkstyle'
  apply plugin: 'jacoco'

  sourceCompatibility = 1.11
  targetCompatibility = 1.11

  repositories {
    google()
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.5.2'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.2.4'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
  }

  test {
    useJUnitPlatform()
  }

  checkstyle {
    maxWarnings = 0
    ignoreFailures = false
    toolVersion '8.27'
    checkstyleTest.enabled = false
  }
}

task codeCoverageReport(type: JacocoReport) {
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  // Add all relevant sourcesets from the subprojects
  subprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    xml.enabled = true
    xml.setDestination(new File("${buildDir}/reports/jacoco/report.xml"))
    html.setEnabled(true)
    html.setDestination(new File("${buildDir}/reports/jacoco/report.html"))
  }

  dependencies {
    subprojects {
      test
    }
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "FelixKlauke_angelina"
  }
}